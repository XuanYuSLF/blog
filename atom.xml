<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>-StarCrow-</title>
  
  
  <link href="https://xuanyuslf.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://xuanyuslf.github.io/blog/"/>
  <updated>2025-04-22T13:47:18.113Z</updated>
  <id>https://xuanyuslf.github.io/blog/</id>
  
  <author>
    <name>XuanYuSLF</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用YUZU模拟器游玩王国之泪</title>
    <link href="https://xuanyuslf.github.io/blog/2025/01/11/yuzu-tears-of-the-kingdom/"/>
    <id>https://xuanyuslf.github.io/blog/2025/01/11/yuzu-tears-of-the-kingdom/</id>
    <published>2025-01-11T10:57:36.000Z</published>
    <updated>2025-04-22T13:47:18.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注: 本文章内容部分来自于网络，且不给予任何下载渠道</p></blockquote><h2 id="1-资源准备"><a href="#1-资源准备" class="headerlink" title="1. 资源准备"></a>1. 资源准备</h2><ul><li>YUZU-EA模拟器本体。</li><li>王国之泪v1.0.0游戏本体。</li><li>王国之泪v1.1.2升级补丁。</li><li>解锁FPS及其画质补丁相关MOD。</li><li>密钥文件及其固件。</li></ul><h2 id="2-安装YUZU-EA模拟器"><a href="#2-安装YUZU-EA模拟器" class="headerlink" title="2. 安装YUZU-EA模拟器"></a>2. 安装YUZU-EA模拟器</h2><ol><li>解压<strong>yuzu-windows-msvc-early-access</strong>压缩包到自己所定的位置。</li><li>在本体下创建user文件夹，以便生成的配置文件在模拟器本体目录下。</li><li>启动一次文件夹，使配置文件生成，任何弹窗都不用关，打开之后关闭即可。</li><li><ul><li>进入 *<em>user\keys*</em> ，将密钥文件置于此处(文件后缀为.keys)。</li><li>进入<strong>user\nand\system\Contents\registered&#x2F;</strong>,将固件至于此处(文件类型为:很多个文件夹)。</li></ul></li><li>打开模拟器，无弹窗提示即为配置成功。</li></ol><h2 id="3-导入游戏及其进行升级"><a href="#3-导入游戏及其进行升级" class="headerlink" title="3. 导入游戏及其进行升级"></a>3. 导入游戏及其进行升级</h2><ol><li>打开模拟器</li><li>按提界面提示添加游戏目录，选择游戏本体所在目录位置。</li><li>选择对应游戏，单击左上角文件，选择<strong>安装文件到NAND</strong>，选择升级补丁进行安装即可。</li></ol><h2 id="4-安装游戏体验增强MOD"><a href="#4-安装游戏体验增强MOD" class="headerlink" title="4. 安装游戏体验增强MOD"></a>4. 安装游戏体验增强MOD</h2><ol><li>在模拟器主界面右键游戏，点击<strong>打开MOD数据位置</strong>。</li><li>将mod压缩包解压到此处即可。</li></ol><h2 id="5-一些基本的设置-个人推荐设置"><a href="#5-一些基本的设置-个人推荐设置" class="headerlink" title="5. 一些基本的设置(个人推荐设置)"></a>5. 一些基本的设置(个人推荐设置)</h2><p>通过 <strong>导航栏-模拟-设置</strong> 进入设置界面</p><p><img src="https://7511dbcd.telegraph-image-3kj.pages.dev/file/AgACAgUAAyEGAASNTiqvAAMJZ4JUyQ4kypPI9nQggXfy6BTecjAAAnTEMRtJehBUiafN-42-og4BAAMCAAN5AAM2BA.png" alt="1" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></p><p><img src="https://7511dbcd.telegraph-image-3kj.pages.dev/file/AgACAgUAAyEGAASNTiqvAAMKZ4JU1owQC6RYrncCe4U98A0VewUAAnXEMRtJehBU9QOGLSjEPlUBAAMCAAN5AAM2BA.png" alt="2" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></p><p><img src="https://7511dbcd.telegraph-image-3kj.pages.dev/file/AgACAgUAAyEGAASNTiqvAAMLZ4JU3CSakPXyeg8pnlOnSZU9hIcAAnbEMRtJehBU9vve10kRBJQBAAMCAAN5AAM2BA.png" alt="3" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></p><p><img src="https://7511dbcd.telegraph-image-3kj.pages.dev/file/AgACAgUAAyEGAASNTiqvAAMMZ4JU4g6dxgaAUXHZFlq8Qp_43H0AAnfEMRtJehBU2Kz64rNvxTABAAMCAAN5AAM2BA.png" alt="4" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></p><p><img src="https://7511dbcd.telegraph-image-3kj.pages.dev/file/AgACAgUAAyEGAASNTiqvAAMNZ4JU5jhuVoF4f-ZVwoiJpILEn4sAAnjEMRtJehBUzC7D41srWggBAAMCAAN5AAM2BA.png" alt="5" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注: 本文章内容部分来自于网络，且不给予任何下载渠道&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-资源准备&quot;&gt;&lt;a href=&quot;#1-资源准备&quot; class=&quot;headerlink&quot; title=&quot;1. 资源准备&quot;&gt;&lt;/a&gt;1. 资源准</summary>
      
    
    
    
    
    <category term="游戏" scheme="https://xuanyuslf.github.io/blog/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="教程" scheme="https://xuanyuslf.github.io/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux下破解安装Typora</title>
    <link href="https://xuanyuslf.github.io/blog/2024/12/14/linux-typora/"/>
    <id>https://xuanyuslf.github.io/blog/2024/12/14/linux-typora/</id>
    <published>2024-12-14T03:37:19.000Z</published>
    <updated>2025-04-22T13:48:13.210Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注: 该文章并非原创，而是结合了<a href="https://seektao.cc/archives/typora-install-activation">寻道之旅的blog</a>和<a href="https://www.hazukieq.top/2023/06c6a00286.html">叶月绘梨依的blog</a>，留以自用。</p></blockquote><h1 id="Typora安装与破解-Linux"><a href="#Typora安装与破解-Linux" class="headerlink" title="Typora安装与破解(Linux)"></a>Typora安装与破解(Linux)</h1><h2 id="1-安装Typora"><a href="#1-安装Typora" class="headerlink" title="1. 安装Typora"></a>1. 安装Typora</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装最新版typora</span></span><br><span class="line">wget -qO - https://typoraio.cn/linux/public-key.asc | sudo tee /etc/apt/trusted.gpg.d/typora.asc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">add Typora<span class="string">&#x27;s repository</span></span></span><br><span class="line"></span><br><span class="line">sudo add-apt-repository &#x27;deb https://typoraio.cn/linux ./&#x27;</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">install typora</span></span></span><br><span class="line"></span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载TYPORA安装包</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">X86(amd)</span></span><br><span class="line">wget https://download2.typoraio.cn/linux/typora_1.6.6_amd64.deb --output-document typora.deb</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ARM</span></span><br><span class="line">wget https://download2.typoraio.cn/linux/typora_1.6.6_arm64.deb --output-document typora.deb</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装TYPORA</span></span><br><span class="line">sudo dpkg -i typora.deb</span><br></pre></td></tr></table></figure><h2 id="2-安装编译环境"><a href="#2-安装编译环境" class="headerlink" title="2. 安装编译环境"></a>2. 安装编译环境</h2><p>由于编译项目需要 <strong>rust</strong> 的支持，所以我们需要配置相关环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行官方脚本安装即可</span></span><br><span class="line">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新环境</span></span><br><span class="line">source &quot;$HOME/.cargo/env&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检查cargo，若看到如下版本信息，则说明配置成功</span></span><br><span class="line">cargo -v</span><br><span class="line">cargo x.xx.x (xxxxxxxxx xxxx-xx-xx)</span><br></pre></td></tr></table></figure><blockquote><p>若安装失败，建议从官网找到对应的离线包进行安装。</p></blockquote><h2 id="3-Typora-激活"><a href="#3-Typora-激活" class="headerlink" title="3. Typora 激活"></a>3. Typora 激活</h2><ol><li><p>找到合适的位置打开终端并Clone Yporaject项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/hazukieq/Yporaject.git</span><br></pre></td></tr></table></figure></li><li><p>进入Yporaject项目并进行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入Yoprainject项目</span></span><br><span class="line">cd Yporainject</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行编译命令</span></span><br><span class="line">cargo build</span><br></pre></td></tr></table></figure></li><li><p>将编译后的可执行文件复制到 typora文件夹下，并切换，执行复制的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">记录当前目录路径，待会返回需要用到</span></span><br><span class="line">cur=`pwd`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制二进制程序到相关目录下</span></span><br><span class="line">sudo cp target/debug/node_inject /usr/share/typora</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入相关目录</span></span><br><span class="line">cd /usr/share/typora</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">给予二进制程序执行权限</span></span><br><span class="line">sudo chmod +x node_inject</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行</span></span><br><span class="line">sudo /usr/share/typora/node_inject</span><br></pre></td></tr></table></figure><p>这里出现如下信息，此时没有任何问题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extracting node_modules.asar</span><br><span class="line">adding hook.js</span><br><span class="line">applying patch</span><br><span class="line">packing node_modules.asar</span><br><span class="line">done!</span><br></pre></td></tr></table></figure></li><li><p>获取许可证激发码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">返回项目</span></span><br><span class="line">cd $cur</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入 license-gen 文件夹并编译代码</span></span><br><span class="line">cd license-gen &amp;&amp; cargo build</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行二进制程序</span></span><br><span class="line">cargo run</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">你将会得到以下输出</span></span><br><span class="line">output:</span><br><span class="line">    Finished dev [unoptimized + debuginfo] target(s) in 0.00s</span><br><span class="line">     Running `target/debug/license-gen`</span><br><span class="line">License for you: xxxxxx-xxxxxx-xxxxxx-xxxxxx</span><br></pre></td></tr></table></figure><p>License既是激活码</p></li><li><p>打开Typora填入邮箱和License即可成功激活</p><blockquote><p>邮箱可任意输入</p></blockquote></li></ol><h2 id="4-卸载Typora"><a href="#4-卸载Typora" class="headerlink" title="4. 卸载Typora"></a>4. 卸载Typora</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge typora</span><br><span class="line"></span><br><span class="line">sudo rm -rf /usr/share/typora</span><br></pre></td></tr></table></figure><blockquote><p>本人当时破解版本为 Typora 1.9.5</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注: 该文章并非原创，而是结合了&lt;a href=&quot;https://seektao.cc/archives/typora-install-activation&quot;&gt;寻道之旅的blog&lt;/a&gt;和&lt;a href=&quot;https://www.hazukieq.</summary>
      
    
    
    
    <category term="Software" scheme="https://xuanyuslf.github.io/blog/categories/Software/"/>
    
    
    <category term="software" scheme="https://xuanyuslf.github.io/blog/tags/software/"/>
    
    <category term="linux" scheme="https://xuanyuslf.github.io/blog/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>运动心率的判断</title>
    <link href="https://xuanyuslf.github.io/blog/2023/08/08/HHR/"/>
    <id>https://xuanyuslf.github.io/blog/2023/08/08/HHR/</id>
    <published>2023-08-08T06:02:21.636Z</published>
    <updated>2022-10-09T07:50:37.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="StarCrow-的第一个-JAVA-项目"><a href="#StarCrow-的第一个-JAVA-项目" class="headerlink" title="StarCrow 的第一个 JAVA 项目"></a>StarCrow 的第一个 JAVA 项目</h1><blockquote><p>该文章讲述的内容与项目中代码有关(指在其中用到的),本人也是第一次编写 JAVA，若有不对的地方请在评论中指出</p></blockquote><p><a href="https://github.com/XuanYuSLF/HHR-Monitoring"><img src="https://github-readme-stats.vercel.app/api/pin/?username=XuanYuSLF&repo=HHR-Monitoring" alt="Readme Card" loading="lazy" onerror='this.onerror=null;this.src="/blog/img/404.jpg"'></a></p><h2 id="这里意旨分享编写-JAVA-文件的一些心得"><a href="#这里意旨分享编写-JAVA-文件的一些心得" class="headerlink" title="这里意旨分享编写 JAVA 文件的一些心得"></a>这里意旨分享编写 JAVA 文件的一些心得</h2><h3 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h3><ol><li><p>基本用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (条件)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>交并</p><blockquote><p><strong>JAVA</strong>语言中””&amp;&amp;””和””||””分别表示”<strong>和</strong>“,”<strong>或</strong>“</p></blockquote><p>如项目中(<strong><em>代码为项目中的局部代码</em></strong>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">220</span> - age &gt;= currentHeartRate &amp;&amp; currentHeartRate &gt;= <span class="number">40</span>) &#123;</span><br><span class="line">    <span class="comment">/*这里引用&amp;&amp;以表示这两者的交集,也就是所谓的&quot;和&quot;*/</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;输入错误请重新输入&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Objects.equals(heart, <span class="string">&quot;有&quot;</span>) || Objects.equals(heart, <span class="string">&quot;无&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">/*这里引用||以表示这两者的并集，也就是所谓的&quot;或&quot;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;输入错误,请重新输入&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>判断字符串类型</p><p>在 JAVA 中不能像 PYTHON 中使用双引号“”直接引用字符串而直接进行判断，而是使用 equals 方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Objects.equals(变量名称, <span class="string">&quot;所要判断的字符串&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Objects.equals(heart, <span class="string">&quot;有&quot;</span>) || Objects.equals(heart, <span class="string">&quot;无&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">/*这里判断，表示如果变量heart==&quot;有&quot;或者&quot;无&quot;，则打断循环，这里循环的作用正是调高容错率，会在下文说明*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;输入错误,请重新输入&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用循环以提高容错率"><a href="#使用循环以提高容错率" class="headerlink" title="使用循环以提高容错率"></a>使用循环以提高容错率</h3><ul><li><p>提高容错率的<strong>必要性</strong>: 若一个人在输入相关数据时，中间应不小心输错一个，在没有提高容错率会导致程序报错而终止程序,从而要重启程序重新输入,所以为了使使用者能有更好的体验,应提高容纳错率</p></li><li><p>本项目主要提高输入的容错率(<a href="#%E5%85%B6%E4%BB%96">输入语句</a>在下文中指出)</p><h4 id="使用-while-语句达到提高输入的容错率"><a href="#使用-while-语句达到提高输入的容错率" class="headerlink" title="使用 while 语句达到提高输入的容错率"></a>使用 while 语句达到提高输入的容错率</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*使while的布尔值为true,即循环打开*/</span></span><br><span class="line"></span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入当前心率=&quot;</span>);</span><br><span class="line">    currentHeartRate = c.nextInt();</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">220</span> - age &gt;= currentHeartRate &amp;&amp; currentHeartRate &gt;= <span class="number">40</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">/*若if的条件满足，则终端循环继续执行后面的代码*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入错误请重新输入&quot;</span>);</span><br><span class="line">        <span class="comment">/*若if的条件不满足，而显示&quot;输入错误请重新输入&quot;,之后返回到循环体的第一步*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用类与对象以分类语法类型"><a href="#使用类与对象以分类语法类型" class="headerlink" title="使用类与对象以分类语法类型"></a>使用类与对象以分类语法类型</h3><ul><li><p>本项目主要使用了 4 个类(Main,judge,formula,input),分别为主类(代码的运行过程)、判断(用于书写判断语句)、公式(用于数值带入公式计算)、输入(用于数据的输入,即用户与程序的交互)</p></li><li><p>这样写可使项目具有条理性，逻辑更清晰，更好的书写代码，使代码更美观</p><h4 id="如何在主类中引用其他类中的方法"><a href="#如何在主类中引用其他类中的方法" class="headerlink" title="如何在主类中引用其他类中的方法"></a>如何在主类中引用其他类中的方法</h4><ol><li><p>在其他类中创建一个静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名()&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在主类中引用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名.方法名();</span><br></pre></td></tr></table></figure></li></ol><h4 id="如何在主类中使用其他类的变量"><a href="#如何在主类中使用其他类的变量" class="headerlink" title="如何在主类中使用其他类的变量"></a>如何在主类中使用其他类的变量</h4><ol><li><p>在其他类中定义一个全局静态变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 变量类型 变量名称;</span><br></pre></td></tr></table></figure></li><li><p>在主变量(或其他变量)中引用其他类变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名.类名下的变量名</span><br></pre></td></tr></table></figure><p>如:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (input.age&gt;=<span class="number">40</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*input.age 即表示在input类下的age所赋的值*/</span></span><br><span class="line"></span><br><span class="line">    formula.heartRate();</span><br><span class="line">    judge.highAge();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*formula.hearRate(); 即表示引用formula类下的heartRate方法*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>驼峰命名法</p><p>若你想在代码中命名一个为 heart rate 的变量</p><blockquote><p>在代码中应这样写 heartRate</p><p>规则:当一个变量名称超过 2 个单词时，第一个单词的首字母小写，后面的单词首字母大写</p></blockquote></li><li><p>Java 中的输入语句</p><ul><li><p>使用<a href="https://www.runoob.com/java/java-scanner-class.html">Scanner 类</a>← 更多详情点这里</p><p>基本用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Scanner 名称 = <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.print(<span class="string">&quot;内容&quot;</span>)</span><br><span class="line">    <span class="comment">/*用于提示所需要输入的内容*/</span></span><br><span class="line">变量 = 名称.nextInt();</span><br><span class="line"><span class="comment">/*nextInt:整型</span></span><br><span class="line"><span class="comment">  nextFloat:浮点型</span></span><br><span class="line"><span class="comment">  next:字符串(本人理解)*/</span></span><br></pre></td></tr></table></figure><p>下段引用于<a href="https://www.runoob.com/">菜鸟教程</a></p><blockquote><p>next():</p><ul><li>1、一定要读取到有效字符后才可以结束输入。</li><li>2、对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li><li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li>next() 不能得到带有空格的字符串。</li></ul><p>nextLine()：</p><ul><li>1、以 Enter 为结束符,也就是说 nextLine()方法返回的是输入回车之前的所有字符。</li><li>2、可以获得空白。</li></ul></blockquote></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;StarCrow-的第一个-JAVA-项目&quot;&gt;&lt;a href=&quot;#StarCrow-的第一个-JAVA-项目&quot; class=&quot;headerlink&quot; title=&quot;StarCrow 的第一个 JAVA 项目&quot;&gt;&lt;/a&gt;StarCrow 的第一个 JAVA 项目&lt;/</summary>
      
    
    
    
    <category term="程序设计" scheme="https://xuanyuslf.github.io/blog/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xuanyuslf.github.io/blog/2023/08/08/hello-world/"/>
    <id>https://xuanyuslf.github.io/blog/2023/08/08/hello-world/</id>
    <published>2023-08-08T06:02:21.636Z</published>
    <updated>2022-10-09T05:11:09.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BLOG-问世"><a href="#BLOG-问世" class="headerlink" title="BLOG 问世"></a>BLOG 问世</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BLOG-问世&quot;&gt;&lt;a href=&quot;#BLOG-问世&quot; class=&quot;headerlink&quot; title=&quot;BLOG 问世&quot;&gt;&lt;/a&gt;BLOG 问世&lt;/h1&gt;</summary>
      
    
    
    
    <category term="Hello" scheme="https://xuanyuslf.github.io/blog/categories/Hello/"/>
    
    
  </entry>
  
  <entry>
    <title>Gooooogle</title>
    <link href="https://xuanyuslf.github.io/blog/2023/02/26/goooogle/"/>
    <id>https://xuanyuslf.github.io/blog/2023/02/26/goooogle/</id>
    <published>2023-02-26T05:37:43.000Z</published>
    <updated>2023-02-26T08:30:14.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Goooooooooooooogle"><a href="#Goooooooooooooogle" class="headerlink" title="Goooooooooooooogle"></a>Goooooooooooooogle</h1><h3 id="时间线"><a href="#时间线" class="headerlink" title="时间线"></a>时间线</h3><ul><li><p>1996年1月</p><p><a href="https://zh.wikipedia.org/wiki/%E6%8B%89%E9%87%8C%C2%B7%E4%BD%A9%E5%A5%87"><strong>拉里·佩奇</strong></a>和<a href="https://zh.wikipedia.org/wiki/%E8%B0%A2%E5%B0%94%E7%9B%96%C2%B7%E5%B8%83%E6%9E%97"><strong>谢尔盖·布林</strong></a>在学校开始研究一项区别于<strong>传统搜索</strong>，根据关键字在页面中的出现次数来进行结果排序的方法，开发了一个对网站之间的关系做精确分析的<strong>搜寻引擎</strong>（名为<a href="https://zh.wikipedia.org/wiki/PageRank">PageRank</a>），此引擎的精确度胜于当时的基本搜索技术。佩奇和布林将这个搜索引擎命名为“BackRub”，直到后来改为“Google”。</p></li><li><p>1997年9月15日</p><p>两人注册了Google域名。</p></li><li><p>1998年9月4日<br><strong>佩奇</strong>和布林在加州门洛帕克一位朋友家的车库内创建了<strong>Google公司</strong>。</p></li><li><p>1999年</p><p>由于搜索引擎的开发花费了太多的学习时间，<strong>佩奇</strong>和布林甚至考虑将其出售，但最终失败了。</p></li><li><p>1999年3月</p><p>Google公司将办公场所搬至加州的帕罗奥多，这里是众多知名的硅谷初创公司所在的地方。</p></li><li><p>1999年4月</p><p>Google开始以出售搜索关键词的广告，这一做法与佩奇和布林以广告赞助搜索的意愿相违背。因此，广告只会以基于文本的形式出现。</p><blockquote><p>关键词的出售结合点击次数和价格的竞标，竞标起价为每次点击5美分。这种出售广告关键词的模式最早来源于Goto.com——一个由比尔·葛罗斯的Idealab企业孵化器派生的网站。之后Google受到了这家改名为Overture Services的公司对于次广告出售专利技术侵权的指控。</p></blockquote></li><li><p>1999年6月7日</p><p>包括<a href="https://zh.wikipedia.org/wiki/Kleiner_Perkins%E5%85%AC%E5%8F%B8">Kleiner Perkins公司</a>和<a href="https://zh.wikipedia.org/wiki/%E7%B4%85%E6%9D%89%E8%B3%87%E6%9C%AC">红杉资本</a>在内的投资者为<strong>Google</strong>注资<strong>两千五百万美元</strong>。</p></li><li><p>2001年</p><p>Google获得了PageRank的专利权，这项专利被正式颁与斯坦福大学，佩奇为专利发明人。</p></li><li><p>2002年2月</p><ol><li>Google向企业市场推出一款名为Google Search Appliance的设备，针对大型组织机构提供搜索技术。三年后Google又推出Google Mini以适应中小型企业。2006年，又推出子自定义搜索商务版，2008年改名为Google协作平台。</li><li>Google推出Google新闻服务。</li></ol></li><li><p>2003年</p><ol><li>Overture Services被雅虎收购，并被改名为雅虎搜索营销。最终，雅虎与Google在庭外达成和解：Google用普通股股份换取此专利的永久授权。</li><li>在发展了两处办公地点以后，公司又向硅谷图形公司租赁了位于芒廷维尤目前所在的综合办公楼。</li><li>Google收购了Pyra Labs创建的博客服务网站Blogger。</li></ol></li><li><p>2004年</p><ol><li><p>4月1日</p><p>Google推出Gmail</p></li><li><p>7月13日</p><p>Google收购照片整理与编辑软件</p></li><li><p>8月19日</p><p>Google进行了首次公开募股，IPO后，Google公司的市值迅速上涨到超过230亿美元。</p></li><li><p>10月</p><p>吞并了Keyhole公司</p><blockquote><p>这家初创公司开发出一个名为Earth Viewer的产品，供用户以3D的视角观察地球。一年后，Google将此服务改名为Google地球。</p></blockquote></li><li><p>Google创建了非营利的慈善机构Google.org，起始基金为10亿美元。</p></li></ol></li><li><p>2005年</p><ol><li><strong>纽约时报</strong>等媒体撰文指出Google已经丧失了原来不作恶的哲学。在此之下，为了保持与众不同的企业文化，Google专门指派了一位<strong>首席文化官</strong>，来为Google构建和维护企业内部广泛协助的扁平化组织，及其所产生的核心价值。</li></ol><blockquote><p><strong>哲学</strong>：Google的宗旨是“整合全球信息，供大众使用，使人人受益”（To organize the world’s information and make it universally accessible and useful）；而非正式的口号则为“不作恶”（Don’t be evil）***）</p></blockquote><ol start="2"><li><p>高科技企业Android被收购并成为Google麾下的移动设备操作系统。</p></li><li><p>Google与<strong>美国国家航空航天局艾姆斯研究中心</strong>合作建设了用于囊括了大规模数据管理、纳米技术、分布式计算、航空航天产业等科研项目的场所，</p></li><li><p>10月</p><p><strong>Google</strong>与<strong>Sun Microsystems</strong>交换并分享了各自的技术。Google也和AOL及时代华纳达成商业伙伴关系，以增强各自视频搜索服务的质量。</p></li><li><p>Google与微软、诺基亚联手，为顶级域名融资。而后Google启动了Adsense for Mobile，开拓移动广告市场。</p></li></ol></li><li><p>2006年</p><ol><li><p>Google以三亿一千九百万的价额向硅谷图形公司买下了位于芒廷维尤目前所在的综合办公楼的产权</p></li><li><p>10月</p><p>Google宣布以16.5亿美元的股票收购在线视频分享网站YouTube，并于11月敲定。</p></li><li><p>新闻集团旗下的福克斯互动媒体同Google达成一份9亿美元的协议，Google为社交网站MySpace]提供搜索与广告业务。</p></li></ol></li><li><p>2007年</p><ol><li><p>4月13日</p><p>Google与DoubleClick达成协议，DoubleClick以31亿美元的价格被Google收购，并成为后者旗下的一家网络出版与广告商。</p></li><li><p>Google以5千万美元并购了GrandCentral，后来将其改造为Google Voice。</p></li><li><p>10月31日</p><p>受益于在网络广告市场的强势盈利，股价首次超过700美元。</p></li><li><p>Google与34家手机制造商、芯片制造商、软件开发商和电信运营商一同创建了开放手机联盟，开发Android系统与苹果iOS、微软Windows Phone等移动平台竞争。</p></li></ol></li><li><p>2008年</p><ol><li><p>5月</p><p>Google在中国大陆收购了上网导航服务<a href="https://zh.wikipedia.org/wiki/265%E5%AF%BC%E8%88%AA">265导航</a>，进一步拓展了其在中国大陆的业务。</p></li><li><p>9月2日</p><p>Google推出在Windows上Beta版的Google Chrome，稳定版本则在12月11日推出。</p></li><li><p>Google宣布“创想10^100项目”，激励人们想出如何帮助人类并从中精选投票。</p></li><li><p>Google在中国大陆发起举办“‘益暖中华’——谷歌杯中国大学生公益创意大赛”</p></li></ol></li><li><p>2009年</p><ol><li><p>7月7日</p><p>Google宣布正在开发基于Linux的操作系统Google Chrome OS</p></li><li><p>8月5日</p><p>Google以1亿650万美元买断视频软件制造公司On2 Technologies。</p></li></ol></li><li><p>2010年</p><ol><li>Google将Aardvark(搜索引擎)纳入旗下。Google又大举并购了<a href="https://zh.wikipedia.org/w/index.php?title=ITA_Software&action=edit&redlink=1">ITA Software</a>、<a href="https://zh.wikipedia.org/w/index.php?title=Slide&action=edit&redlink=1">Slide</a>、<a href="https://zh.wikipedia.org/wiki/Like.com">Like.com</a>等。</li><li>1月5日，Google公司发布自有的一款手机，名为<a href="https://zh.wikipedia.org/wiki/Nexus_One">Nexus One</a>。</li></ol></li><li><p>2011年</p><ol><li><p>5月</p><p>Google的月独立访客数量首次超过十亿，与一年前同期的9亿3100万相比增长8.4%。Google也是首个获取该数据里程碑的网站。</p></li><li><p>Google，业已将SageTV等十余家美国和欧洲的企业或团队招致麾下。</p></li><li><p>8月15日</p><p>Google官方宣布将以每股40美元现金，总额约125亿美元收购摩托劳拉移动。</p></li><li><p>Google先后推出语音搜索和图片搜索。</p></li><li><p>Google发布新的社交网站Google+。</p></li><li><p>10月6日</p><p>Google推出Google云平台(Google Cloud Platform)。</p></li><li><p>Google公司为国际奥林匹克数学竞赛捐款一百万欧元，以支持该竞赛2011年至2015年的举办</p></li></ol></li><li><p>2012年</p><ol><li><p>7月</p><p>Google正式推出光纤宽带服务Google光纤，率先在美国堪萨斯城试验一套超高速网络系统，可以同时提供上网及有线电视服务。</p></li><li><p>Google创立全球影响力大奖，鼓励运用科技和创新解决方案来应付人类当前挑战的机构与组织。</p></li></ol></li><li><p>2013年9月11日</p><p>Google将伙拍哈佛大学和麻省理工（MIT）组成的网上教育平台<a href="https://zh.wikipedia.org/wiki/EdX">edX</a>，发展网上教学课程，任何人都可将课程放入网络中。</p></li><li><p>2015年</p><ol><li><p>8月10日</p><p>Google宣布要组织重整为控股公司Alphabet，Google则会是Alphabet公司旗下最大的子公司。</p></li><li><p>10月</p><p>谷歌公司投资中国人工智能公司——Mobvoi。</p></li></ol></li><li><p>2017年6月9日</p><p>日本科技巨头软银宣布，公司已经收购谷歌母公司Alphabet旗下的人形机器人公司波士顿动力（Boston Dynamics）以及谷歌旗下另一家日本人形机器人公司Schaft。</p></li><li><p>2019年</p><ol><li><p>6月6日</p><p>谷歌以26亿美元的价格收购数据分析平台Looker。</p></li><li><p>11月</p><p>Alphabet宣布将以 21 亿美元收购可穿戴公司Fitbit。</p></li></ol></li><li><p>2020年4月</p><p>由于COVID-19 大流行，谷歌宣布了多项削减成本的措施。</p></li></ul><blockquote><p>整理于wikipedia</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Goooooooooooooogle&quot;&gt;&lt;a href=&quot;#Goooooooooooooogle&quot; class=&quot;headerlink&quot; title=&quot;Goooooooooooooogle&quot;&gt;&lt;/a&gt;Goooooooooooooogle&lt;/h1&gt;&lt;h3 id=&quot;时</summary>
      
    
    
    
    
    <category term="公司简史" scheme="https://xuanyuslf.github.io/blog/tags/%E5%85%AC%E5%8F%B8%E7%AE%80%E5%8F%B2/"/>
    
  </entry>
  
</feed>
